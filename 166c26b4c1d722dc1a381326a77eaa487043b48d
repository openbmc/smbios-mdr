{
  "comments": [
    {
      "key": {
        "uuid": "3d42f126_64b89885",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-02-23T01:46:26Z",
      "side": 1,
      "message": "1. Whether test it on Intel platform? and see what\u0027s the impact?\n2. Please share detail test method here.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bbc8df7_51b4d6ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-02-24T09:59:30Z",
      "side": 1,
      "message": "\u003e 1. Whether test it on Intel platform? and see what\u0027s the impact?\n\u003e 2. Please share detail test method here.\n\n1. Yes. It is tested on Intel platform in google data center. It will create a dedicated IPMI blob handler for SMBIOS tables shown as a library artifact on BMC, as google BMC will not contain all the commands of [intel-ipmi-oem](https://github.com/openbmc/intel-ipmi-oem), especially the intel OEM MDR commands. Thus, we use [IPMI blob interface](https://github.com/openbmc/phosphor-ipmi-blobs) to update SMBIOS tables.\n\n2. Test requires to implement IPMI blob commands on BIOS/UEFI side. [link to the BIOS change](https://github.com/u-root/u-root/pull/1944). When booting, BIOS will issue IPMI commands to write and commit the blob. In the commit operation, smbios-mdr AgentSynchronizeData method will be called, such that SMBIOS tables can get updated.\n\nTypically, Intel BMC will not not need this library. Easy to set this off in compiling. But for non-Intel BMC that wanna absorb SMBIOS tables in BIOS time and parse the SMBIOS tables use smbios-mdr, it would be handy.",
      "parentUuid": "3d42f126_64b89885",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6294ef15_ab5712ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "Intel platforms can leave this disabled and continue using their OEM commands, so it shouldn\u0027t have an effect there.",
      "parentUuid": "2bbc8df7_51b4d6ed",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "141d828b_f45fc8f9",
        "filename": "CMakeLists.txt",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-02-23T01:46:26Z",
      "side": 1,
      "message": "Convert all tab to spaces",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 3
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec59a426_5149b2c1",
        "filename": "CMakeLists.txt",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-02-24T09:59:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "141d828b_f45fc8f9",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 3
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7e91f46_19c1204a",
        "filename": "CMakeLists.txt",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-02-23T01:46:26Z",
      "side": 1,
      "message": "Convert all tab to spaces",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 3
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0abc3f_c7547906",
        "filename": "CMakeLists.txt",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-02-24T09:59:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7e91f46_19c1204a",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 3
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1a18e4b_cea5be92",
        "filename": "src/smbios-ipmi-blobs/handler.cpp",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "are these defined in a header file in the rest of the repo that you can include?",
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "381370ad_2a9531e0",
        "filename": "src/smbios-ipmi-blobs/handler.cpp",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "I think you can just do `return std::vector\u003cstd::string\u003e(blobId)`",
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303d9b55_fbec5865",
        "filename": "src/smbios-ipmi-blobs/handler.cpp",
        "patchSetId": 9
      },
      "lineNbr": 242,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "need to call smbiosFile.exceptions() to enable exception throwing",
      "range": {
        "startLine": 242,
        "startChar": 26,
        "endLine": 242,
        "endChar": 33
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5391c232_23378efb",
        "filename": "src/smbios-ipmi-blobs/handler.hpp",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "This might make more sense inside of the SmbiosBlobHandler class, since it\u0027s only used there. That would also mean you don\u0027t need to pass in the maxBufferSize",
      "range": {
        "startLine": 15,
        "startChar": 7,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b762c1_80e51a75",
        "filename": "src/smbios-ipmi-blobs/handler.hpp",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "do we support reading back the SMBIOS tables from the BMC on the host?",
      "range": {
        "startLine": 22,
        "startChar": 38,
        "endLine": 22,
        "endChar": 42
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f33fc506_24322efe",
        "filename": "src/smbios-ipmi-blobs/handler.hpp",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "Probably not important for SMBIOS tables since they don\u0027t contain sensitive data",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 39,
        "endChar": 44
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359e5d9a_ae4e8924",
        "filename": "src/smbios-ipmi-blobs/handler.hpp",
        "patchSetId": 9
      },
      "lineNbr": 95,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "since the session limit is 1, you don\u0027t really need to have a map of open sessions. you can just keep the single open session ID and buffer here directly",
      "range": {
        "startLine": 95,
        "startChar": 45,
        "endLine": 95,
        "endChar": 53
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b586576_209ea402",
        "filename": "src/smbios-ipmi-blobs/test/handler_open_unittest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "I suggest against using this parameter in the unit test since it wouldn\u0027t catch an unexpected change to maxSessions()\n\nYou can actually just remove this test since the next one is identical",
      "range": {
        "startLine": 29,
        "startChar": 32,
        "endLine": 29,
        "endChar": 43
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0753db3a_5a3f818c",
        "filename": "src/smbios-ipmi-blobs/test/handler_unittest.hpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-04-16T17:13:32Z",
      "side": 1,
      "message": "why\u0027s it called \"legacyBlob\"?",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "166c26b4c1d722dc1a381326a77eaa487043b48d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}