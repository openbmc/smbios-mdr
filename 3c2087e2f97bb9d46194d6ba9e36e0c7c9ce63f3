{
  "comments": [
    {
      "key": {
        "uuid": "2772f40f_444ad7e5",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-05T23:46:57Z",
      "side": 1,
      "message": "nit: remove \u0027be\u0027",
      "range": {
        "startLine": 484,
        "startChar": 49,
        "endLine": 484,
        "endChar": 52
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07053ded_ab1fcc64",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2772f40f_444ad7e5",
      "range": {
        "startLine": 484,
        "startChar": 49,
        "endLine": 484,
        "endChar": 52
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c5131e3_09f64fde",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-12T18:10:43Z",
      "side": 1,
      "message": "nit \u0026 not part of this patch: Any reason, these are not part of initialization list?",
      "range": {
        "startLine": 520,
        "startChar": 0,
        "endLine": 521,
        "endChar": 25
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cffa620_610a4614",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "No, I went ahead and made some things const and moved everything into the initialization list.",
      "parentUuid": "5c5131e3_09f64fde",
      "range": {
        "startLine": 520,
        "startChar": 0,
        "endLine": 521,
        "endChar": 25
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca2ed02f_61955218",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 568,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-12T18:10:43Z",
      "side": 1,
      "message": "Is this still correct after catch?",
      "range": {
        "startLine": 568,
        "startChar": 12,
        "endLine": 568,
        "endChar": 32
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc834f14_df6c9435",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 568,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "Yes, since it is the previously read (cached) value. Same with currentLevel in appliedConfig(). There was a small bug since bfEnabled/currentLevel were not initialized in the constructor, but I fixed that too.",
      "parentUuid": "ca2ed02f_61955218",
      "range": {
        "startLine": 568,
        "startChar": 12,
        "endLine": 568,
        "endChar": 32
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03b26101_f63fc56b",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 576,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-12T18:10:43Z",
      "side": 1,
      "message": "May want a comment on this throw if failed to check since it is not obvious",
      "range": {
        "startLine": 576,
        "startChar": 8,
        "endLine": 576,
        "endChar": 27
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "326354f1_71f9cb63",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 576,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "Agreed - renamed to setPropertyCheckOrThrow()",
      "parentUuid": "03b26101_f63fc56b",
      "range": {
        "startLine": 576,
        "startChar": 8,
        "endLine": 576,
        "endChar": 27
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f11146b_df4318f0",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 618,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-12T18:10:43Z",
      "side": 1,
      "message": "nit: use constexpr?",
      "range": {
        "startLine": 618,
        "startChar": 42,
        "endLine": 618,
        "endChar": 44
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4225200f_04452740",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 618,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "we can\u0027t - the value is not const",
      "parentUuid": "3f11146b_df4318f0",
      "range": {
        "startLine": 618,
        "startChar": 42,
        "endLine": 618,
        "endChar": 44
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "463d489d_41aef41c",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 619,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-12T17:42:46Z",
      "side": 1,
      "message": "value gets truncated when passed to uint8_t constructor param",
      "range": {
        "startLine": 618,
        "startChar": 12,
        "endLine": 619,
        "endChar": 54
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc2829c8_e71ef753",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 619,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-13T03:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "463d489d_41aef41c",
      "range": {
        "startLine": 618,
        "startChar": 12,
        "endLine": 619,
        "endChar": 54
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8594c47f_fd1c9793",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 626,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-12T19:02:21Z",
      "side": 1,
      "message": "This is not allowed for this property - return Common.Device.Error.WriteFailure",
      "range": {
        "startLine": 625,
        "startChar": 12,
        "endLine": 626,
        "endChar": 34
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "443d0b90_f786f5e3",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 626,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-13T03:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8594c47f_fd1c9793",
      "range": {
        "startLine": 625,
        "startChar": 12,
        "endLine": 626,
        "endChar": 34
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92dadc1d_995a81b4",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 771,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-12T18:10:43Z",
      "side": 1,
      "message": "should this be outside the loop?",
      "range": {
        "startLine": 768,
        "startChar": 0,
        "endLine": 771,
        "endChar": 9
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98dce882_e7820d97",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 771,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-17T01:16:16Z",
      "side": 1,
      "message": "No, see the comment in the newest patchset - I want to get updates to hostState and quit early if the power is turned off.",
      "parentUuid": "92dadc1d_995a81b4",
      "range": {
        "startLine": 768,
        "startChar": 0,
        "endLine": 771,
        "endChar": 9
      },
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f23d7ca0_9b49394d",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 835,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-05T23:46:57Z",
      "side": 1,
      "message": "Is there an ioc.run() already going?",
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1740f07_13f26203",
        "filename": "src/speed_select.cpp",
        "patchSetId": 8
      },
      "lineNbr": 835,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-02-10T18:45:43Z",
      "side": 1,
      "message": "There may or may not be. This functions runs for the first time before ioc.run() starts, but if it fails it will reschedule itself for later, after ioc.run() is going. The main point of this is to get updates to hostState, and I confirmed it does work for that (at least in the second case where ioc.run() is going).\nBut my testing also showed a somewhat unrelated bug, so I have another update coming.",
      "parentUuid": "f23d7ca0_9b49394d",
      "revId": "3c2087e2f97bb9d46194d6ba9e36e0c7c9ce63f3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}