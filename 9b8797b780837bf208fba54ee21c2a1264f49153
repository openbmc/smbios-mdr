{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68f22bcf_2d350d0f",
        "filename": "include/mdrv2.hpp",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-11-08T00:34:00Z",
      "side": 1,
      "message": "const char* for all auto here",
      "range": {
        "startLine": 52,
        "startChar": 17,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf8a001d_29872e42",
        "filename": "include/mdrv2.hpp",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-08T20:07:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "68f22bcf_2d350d0f",
      "range": {
        "startLine": 52,
        "startChar": 17,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a03ac57_e9afa934",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-11-08T00:34:00Z",
      "side": 1,
      "message": "This is the old code, but, in reviewing this patch, I am question whether it should continue after catch.",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5587a045_1fbbdc95",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-08T20:07:14Z",
      "side": 1,
      "message": "If `systemInfoUpdate` function `exit` because of `motherboardPath` isn\u0027t valid or failed to get one, then following code wouldn\u0027t create object paths for `cpuX`, `bios`, `dimmX` and `pcieslotX`. \nI\u0027m assuming that\u0027s the reason we aren\u0027t bailing out. In case, if `motherboardPath` is empty, it was handled gracefully here https://github.com/openbmc/smbios-mdr/blob/master/src/cpu.cpp#L190-L195",
      "parentUuid": "8a03ac57_e9afa934",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532d9216_e63a5313",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1000998
      },
      "writtenOn": "2022-11-08T20:48:26Z",
      "side": 1,
      "message": "I think in the original implementation, this could happen if a system intentionally did not define the root chassis, but you have already dealt with that case above, so exceptions are always just failures, and it is okay to skip the rest of the function.",
      "parentUuid": "5587a045_1fbbdc95",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "514c1050_447f7bd1",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-09T18:25:49Z",
      "side": 1,
      "message": "In my opinion, `MotherboardPath` object path isn\u0027t critical to this service and we don\u0027t need to bail out just because we don\u0027t have that object path. This `exception` could be intermittent itself, not necessarily we are going to fail on subsequent calls to dbus.",
      "parentUuid": "532d9216_e63a5313",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0955037e_32083957",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-11-09T20:35:38Z",
      "side": 1,
      "message": "As long as empty motherboardPath is handled gracefully, also rest of code is not basically no-op, I am fine with it.",
      "parentUuid": "514c1050_447f7bd1",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2561f0dc_a7db9a89",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 414,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-09T20:53:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0955037e_32083957",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeb72407_7490a479",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 421,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-11-08T00:34:00Z",
      "side": 1,
      "message": "else {\nmotherboardPath \u003d paths[0];\n}",
      "range": {
        "startLine": 421,
        "startChar": 4,
        "endLine": 421,
        "endChar": 7
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c759e293_1bd4fa96",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 421,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-08T20:07:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aeb72407_7490a479",
      "range": {
        "startLine": 421,
        "startChar": 4,
        "endLine": 421,
        "endChar": 7
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64571ca2_61df9410",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-11-08T00:34:00Z",
      "side": 1,
      "message": "move this in try clause.",
      "range": {
        "startLine": 416,
        "startChar": 0,
        "endLine": 422,
        "endChar": 0
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fedcbfae_c437714f",
        "filename": "src/mdrv2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 1001437
      },
      "writtenOn": "2022-11-08T20:07:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64571ca2_61df9410",
      "range": {
        "startLine": 416,
        "startChar": 0,
        "endLine": 422,
        "endChar": 0
      },
      "revId": "9b8797b780837bf208fba54ee21c2a1264f49153",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}