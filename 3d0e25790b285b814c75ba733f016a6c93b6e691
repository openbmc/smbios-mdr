{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "16092988_d864764d",
        "filename": "include/firmware_inventory.hpp",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-03-20T10:20:00Z",
      "side": 1,
      "message": "As I understand, this defined for Firmware Component Name.\nThe bmcweb obtains the Firmware Component Name from the object patch. Example /xyz/openbmc_project/software/UEFI. This will mapped to the Id property https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/update_service.hpp#L1232.\nTherefore, this is redundant to map the Firmware Component Name to xyz.openbmc_project.Inventory.Item.s PrettyName.",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bb22119_4d51b49f",
        "filename": "include/firmware_inventory.hpp",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-20T18:27:06Z",
      "side": 1,
      "message": "Is the suggestion to get rid of Item interface ? \nIt indicates the presence of the device.",
      "parentUuid": "16092988_d864764d",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9484a658_a4f3aba9",
        "filename": "include/firmware_inventory.hpp",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-03-27T06:30:20Z",
      "side": 1,
      "message": "IMO, we can keep the xyz.openbmc_project.Inventory.Item\u0027s Present property to indicates the presence of the device. But, do not need to support PrettyName property.",
      "parentUuid": "6bb22119_4d51b49f",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca9fd743_3b581d3b",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-03-20T10:20:00Z",
      "side": 1,
      "message": "What is purpose of this function? Is this needed?",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d59aa02_80dbf108",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-20T10:45:41Z",
      "side": 1,
      "message": "Other services also expose Version(example pldm, entity-manager).\nHence we check if the version path already exists. \nBased on that we create FirmwareInventory for only those which is not duplicate.",
      "parentUuid": "ca9fd743_3b581d3b",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cf177c1_620d0429",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-03-20T10:20:00Z",
      "side": 1,
      "message": "As comment above, do not need to create firmware object path based on Firmware ID. This should be based on Firmware Component Name.",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c5fd57f_e78c884a",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-20T10:45:41Z",
      "side": 1,
      "message": "As per your requirement FirmwareId and FirmwareComponent has different names ?",
      "parentUuid": "9cf177c1_620d0429",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a74384d8_127e43f7",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-03-27T06:30:20Z",
      "side": 1,
      "message": "Yes, they has different names in our system. That why we create object path based on the Firmware Component Name.",
      "parentUuid": "2c5fd57f_e78c884a",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5452f286_3b89247e",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2025-04-01T04:14:08Z",
      "side": 1,
      "message": "@Prithvi Pai, \nCould you support the option to select the Firmware ID or Firmware Component when create an object path?",
      "parentUuid": "a74384d8_127e43f7",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b16a2871_ce03bac9",
        "filename": "src/firmware_inventory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-04-01T06:22:29Z",
      "side": 1,
      "message": "As requested added meson option which helps in selecting firmware component name as dbus object path",
      "parentUuid": "5452f286_3b89247e",
      "revId": "3d0e25790b285b814c75ba733f016a6c93b6e691",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}